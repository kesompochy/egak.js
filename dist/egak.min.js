(function(p,x){typeof exports=="object"&&typeof module<"u"?x(exports):typeof define=="function"&&define.amd?define(["exports"],x):(p=typeof globalThis<"u"?globalThis:p||self,x(p.EGAK={}))})(this,function(p){"use strict";class x{static checkGL(){if(x.gl)return x.gl;throw new Error("There seems to be no canvas")}}const q=`#version 300 es
 
in vec2 a_position;
in vec2 a_texcoord;
 
uniform mat3 u_transformation;
 
out vec2 v_texcoord;
 
void main() {
   v_texcoord = a_texcoord;

   gl_Position = vec4((u_transformation * vec3(a_position, 1)).xy, 0, 1);
}`,J=`#version 300 es
precision highp float;

in vec2 v_texcoord;

uniform sampler2D u_texture;

uniform float u_opacity;

out vec4 outColor;

void main() {
   outColor = texture(u_texture, v_texcoord) * vec4(1, 1, 1, u_opacity);
}`,Q=`#version 300 es
 
in vec2 a_position;
in vec4 a_color;
 
uniform mat3 u_transformation;
 
out vec4 v_color;
 
void main() {
   v_color = a_color;

   gl_Position = vec4((u_transformation * vec3(a_position, 1)).xy, 0, 1);
}`,Z=`#version 300 es
precision highp float;

in vec4 v_color;


uniform float u_opacity;

const float COLOR_BYTES = 255.;
const float COLOR_BYTES_INVERSE = 1./COLOR_BYTES;

out vec4 outColor;

void main() {
   outColor = v_color * vec4(COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, u_opacity);
}`,j=`#version 300 es
 
in vec2 a_position;
in vec4 a_color;
 
uniform mat3 u_transformation;
 
out vec4 v_color;
out vec2 v_position;
 
void main() {
   v_color = a_color;

   gl_Position = vec4((u_transformation * vec3(a_position, 1)).xy, 0, 1);
   v_position = a_position;
}`,tt=`#version 300 es
precision highp float;

in vec4 v_color;
in vec2 v_position;

uniform float u_opacity;
uniform float u_radius;
uniform vec2 u_center;
uniform float u_startAngle;
uniform float u_endAngle;
uniform float u_clockwize;

out vec4 outColor;

const float PI  = 3.141592653589793;
const float PI2 = PI * 2.0;

const float COLOR_BYTES = 255.;
const float COLOR_BYTES_INVERSE = 1./COLOR_BYTES;
const float edge = 1.;

void main() {
   vec4 normalizedColor = v_color * vec4(COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, u_opacity);
   
   float dx = v_position.x - u_center.x;
   float dy = v_position.y - u_center.y;
   //float angle = u_clockwize*fract(atan(dy, dx)/PI2 + 1.);

   float dist = distance(u_center, v_position)/u_radius;
   float delta = fwidth(dist);
   float alpha = smoothstep(edge - delta, edge, dist);

   

   //if(u_clockwize*angle >= u_startAngle && u_clockwize*angle <= u_endAngle){
      outColor = mix(normalizedColor, outColor, alpha);
   //} else {
   //   discard;
   //}
}`,et=`#version 300 es
 
in vec2 a_position;
in vec4 a_color;
 
uniform mat3 u_transformation;
 
out vec4 v_color;
out vec2 v_position;
 
void main() {
   v_color = a_color;

   gl_Position = vec4((u_transformation * vec3(a_position, 1)).xy, 0, 1);
   v_position = a_position;
}`,it=`#version 300 es
precision highp float;

in vec4 v_color;
in vec2 v_position;

uniform float u_opacity;

uniform float u_radius;
uniform vec2 u_position;
uniform float u_width;
uniform float u_height;

const float COLOR_BYTES = 255.;
const float COLOR_BYTES_INVERSE = 1./COLOR_BYTES;



out vec4 outColor;

void main() {
   vec4 normalizedVColor = v_color*vec4(COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, u_opacity);

   vec2[4] centers = vec2[](
      vec2(u_position.x + u_radius,            u_position.y + u_radius),
      vec2(u_position.x + u_radius,            u_position.y + u_height - u_radius),
      vec2(u_position.x + u_width - u_radius,  u_position.y + u_radius),
      vec2(u_position.x + u_width - u_radius,  u_position.y + u_height - u_radius)
   );

   float[4] distances = float[](
      0., 0., 0., 0.
   );

   float[4] alphas = float[](
      0., 0., 0., 0.
   );
   for(int i = 0; i<4; i++){
      float dist = distance(centers[i], v_position)/u_radius;
      distances[i] = dist;
      float delta = fwidth(dist);
      alphas[i] = smoothstep(1.-delta, 1., dist);
   }

   if(distance(v_position, vec2(u_position.xy)) < u_radius){
      outColor = mix(normalizedVColor, outColor, alphas[0]);
   } else if(distance(v_position, vec2(u_position.x, u_position.y+u_height)) < u_radius){
      outColor = mix(normalizedVColor, outColor, alphas[1]);
   } else if(distance(v_position, vec2(u_position.x+u_width, u_position.y)) < u_radius){
      outColor = mix(normalizedVColor, outColor, alphas[2]);
   } else if(distance(v_position, vec2(u_position.x+u_width, u_position.y+u_height)) < u_radius){
      outColor = mix(normalizedVColor, outColor, alphas[3]);
   } else {
      outColor = normalizedVColor;
   }
}`,st=`#version 300 es
 
in vec2 a_position;
in vec4 a_color;
 
uniform mat3 u_transformation;
 
out vec4 v_color;
out vec2 v_position;
 
void main() {
   v_color = a_color;

   gl_Position = vec4((u_transformation * vec3(a_position, 1)).xy, 0, 1);
   v_position = a_position;
}`,rt=`#version 300 es
precision highp float;

in vec4 v_color;
in vec2 v_position;

uniform float u_opacity;

uniform vec2 u_center;
uniform float u_width;
uniform float u_height;

out vec4 outColor;

const float COLOR_BYTES = 255.;
const float COLOR_BYTES_INVERSE = 1./COLOR_BYTES;
const float edge = 1.;

void main() {
   vec4 normalizedColor = v_color * vec4(COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, COLOR_BYTES_INVERSE, u_opacity);

   float focus = sqrt(abs(u_width*u_width - u_height*u_height))/2.;
   float dx = v_position.x - u_center.x;
   float dy = v_position.y - u_center.y;

   if(u_width > u_height){
      float dist1 = distance(vec2(focus, 0), vec2(dx, dy));
      float dist2 = distance(vec2(-focus, 0), vec2(dx, dy));

      float dist = (dist1 + dist2)/u_width;
      float delta = fwidth(dist);
      float alpha = smoothstep(edge-delta, edge, dist);

      outColor = mix(normalizedColor, outColor, alpha);


   } else {
      float dist1 = distance(vec2(0, focus), vec2(dx, dy));
      float dist2 = distance(vec2(0, -focus), vec2(dx, dy));

      float dist = (dist1 + dist2)/u_height;
      float delta = fwidth(dist);
      float alpha = smoothstep(edge-delta, edge, dist);

      outColor = mix(normalizedColor, outColor, alpha);

   }
}`,c=2,z=2,_=4;function l(i){return Float32Array.BYTES_PER_ELEMENT*i}const ot=[{name:"sprite",vss:q,fss:J,attribParams:[{name:"position",size:c,type:"FLOAT",stride:l(c+z),offset:0},{name:"texcoord",size:z,type:"FLOAT",stride:l(c+z),offset:l(c)}],uniforms:["transformation","opacity","texture"]},{name:"polygon",vss:Q,fss:Z,attribParams:[{name:"position",size:c,type:"FLOAT",stride:l(c+_),offset:0},{name:"color",size:_,type:"FLOAT",stride:l(c+_),offset:l(c)}],uniforms:["transformation","opacity"]},{name:"circle",vss:j,fss:tt,attribParams:[{name:"position",size:c,type:"FLOAT",stride:l(c+_),offset:0},{name:"color",size:_,type:"FLOAT",stride:l(c+_),offset:l(c)}],uniforms:["transformation","opacity","radius","center","startAngle","endAngle","clockwize"]},{name:"roundedrect",vss:et,fss:it,attribParams:[{name:"position",size:c,type:"FLOAT",stride:l(c+_),offset:0},{name:"color",size:_,type:"FLOAT",stride:l(c+_),offset:l(c)}],uniforms:["transformation","opacity","radius","position","width","height"]},{name:"ellipse",vss:st,fss:rt,attribParams:[{name:"position",size:c,type:"FLOAT",stride:l(c+_),offset:0},{name:"color",size:_,type:"FLOAT",stride:l(c+_),offset:l(c)}],uniforms:["transformation","opacity","center","width","height"]}],nt={line:"LINE_STRIP",triangle:"TRIANGLE_STRIP",rectangle:"TRIANGLES",circle:"TRIANGLES",roundedrect:"TRIANGLES",ellipse:"TRIANGLES"},at={line:i=>i.geometryInfo.length,triangle:()=>3,rectangle:()=>6,circle:()=>6,roundedrect:()=>6,ellipse:()=>6},ct={polygon:()=>{},circle:(i,t,e)=>{i.uniform1f(t.radius,e.radius),i.uniform2f(t.center,e.center.x,e.center.y),i.uniform1f(t.startAngle,e.startAngle/(Math.PI*2)),i.uniform1f(t.endAngle,e.endAngle/(Math.PI*2)),i.uniform1f(t.clockwize,e.clockWize)},roundedrect:(i,t,e)=>{i.uniform1f(t.radius,e.radius),i.uniform2f(t.position,e.x,e.y),i.uniform1f(t.width,e.w),i.uniform1f(t.height,e.h)},ellipse:(i,t,e)=>{i.uniform2f(t.center,e.x,e.y),i.uniform1f(t.width,e.width),i.uniform1f(t.height,e.height)}},ht={polygon:()=>{},circle:(i,t,e,s,r)=>{i.uniform1f(t.radius,new Array(e.radius,e.radius+r)[s])},roundedrect:(i,t,e,s,r)=>{i.uniform1f(t.radius,new Array(e.radius,e.radius+r)[s]),i.uniform2f(t.position,new Array(e.x,e.x-r)[s],new Array(e.y,e.y-r)[s]),i.uniform1f(t.width,new Array(e.w,e.w+r*2)[s]),i.uniform1f(t.height,new Array(e.h,e.h+r*2)[s])},ellipse:(i,t,e,s,r)=>{i.uniform1f(t.width,new Array(e.width,e.width+r*2)[s]),i.uniform1f(t.height,new Array(e.height,e.height+r*2)[s])}},A=[0,1,2,1,3,2],ut={line:i=>{const t=[];for(let e=0,s=i.geometryInfo.length;e<s;e++)t.push(e);return t},triangle:()=>[0,1,2],rectangle:()=>A,circle:()=>A,roundedrect:()=>A,ellipse:()=>A},k="a_",lt="u_";function dt(i,t,e){const s=i.createBuffer();return i.bindBuffer(t,s),i.bufferData(t,e,i.STATIC_DRAW),i.bindBuffer(i.ARRAY_BUFFER,null),s}function _t(i,t,e){const s=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,s);for(let r=0,o=e.length;r<o;r++){const a=e[r],n=i.getAttribLocation(t,k+a.name);i.enableVertexAttribArray(n),i.vertexAttribPointer(n,a.size,i[a.type],!1,a.stride,a.offset)}return i.bindBuffer(i.ARRAY_BUFFER,null),s}function ft(i){const t=new Uint16Array([0,1,2,1,3,2]);return dt(i,i.ELEMENT_ARRAY_BUFFER,t)}function pt(i,t,e){return i.getUniformLocation(t,e)}function X(i,t,e){const s=i.createShader(t);if(!s)throw new Error("failed to create a shader");return i.shaderSource(s,e),i.compileShader(s),i.getShaderParameter(s,i.COMPILE_STATUS)||(console.log(i.getShaderInfoLog(s)),i.deleteShader(s)),s}function vt(i,...t){const e=i.createProgram();if(!e)throw new Error("failed to create program");for(let s=0,r=t.length;s<r;s++)i.attachShader(e,t[s]);return i.linkProgram(e),i.getProgramParameter(e,i.LINK_STATUS)||(console.log(i.getProgramInfoLog(e)),i.deleteProgram(e)),e}function xt(i,t,e){const s=X(i,i.VERTEX_SHADER,t),r=X(i,i.FRAGMENT_SHADER,e);return vt(i,s,r)}function mt(i,t,e,s,r){const o=xt(i,t,e),a=_t(i,o,s),n=ft(i),f={};for(let h=0,v=r.length;h<v;h++){const u=r[h];f[u]=pt(i,o,lt+u)}return{program:o,vbo:a,ibo:n,uniforms:f,pointAttrs:()=>{i.bindBuffer(i.ARRAY_BUFFER,a);for(let h=0,v=s.length;h<v;h++){const u=s[h];i.vertexAttribPointer(i.getAttribLocation(o,k+u.name),u.size,i[u.type],!1,u.stride,u.offset)}i.bindBuffer(i.ARRAY_BUFFER,null)}}}function Et(i,t){const e=i.createTexture();return i.bindTexture(i.TEXTURE_2D,e),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i[t]),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR),i.bindTexture(i.TEXTURE_2D,null),e}function G(i,t,e){return i.bindTexture(i.TEXTURE_2D,t),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,e),i.generateMipmap(i.TEXTURE_2D),i.bindTexture(i.TEXTURE_2D,null),t}function St(i){i.enable(i.BLEND),i.blendFunc(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}function Tt(i,t){const s=t.r/256,r=t.g/256,o=t.b/256,a=t.a===void 0?1:t.a;i.clearColor(s,r,o,a),i.clear(i.COLOR_BUFFER_BIT)}function yt(i,t){const e=i.canvas,s=e.clientWidth,r=e.clientHeight;e.width=s*t,e.height=r*t,i.viewport(0,0,e.width,e.height)}function L(i,t){return[2/i,0,0,0,-2/t,0,-1,1,1]}function I(i,t){return[i,0,0,0,t,0,0,0,1]}function C(i,t){return[1,0,0,0,1,0,i,t,1]}function W(i){const t=Math.sin(i),e=Math.cos(i);return[e,-t,0,t,e,0,0,0,1]}function H(i,t){var e=i[0],s=i[0*3+1],r=i[0*3+2],o=i[1*3+0],a=i[1*3+1],n=i[1*3+2],f=i[2*3+0],d=i[2*3+1],h=i[2*3+2],v=t[0*3+0],u=t[0*3+1],T=t[0*3+2],m=t[1*3+0],g=t[1*3+1],w=t[1*3+2],R=t[2*3+0],D=t[2*3+1],V=t[2*3+2];return[v*e+u*o+T*f,v*s+u*a+T*d,v*r+u*n+T*h,m*e+g*o+w*f,m*s+g*a+w*d,m*r+g*n+w*h,R*e+D*o+V*f,R*s+D*a+V*d,R*r+D*n+V*h]}function B(...i){let t=i[0];for(let e=0,s=i.length-1;e<s;e++)t=H(t,i[e+1]);return t}function P(){return[1,0,0,0,1,0,0,0,1]}class gt{constructor(t){this.resolution=window.devicePixelRatio||1,this._projectionMat=[],this._shaders={},this._renderMethods={sprite:this.renderSprite.bind(this),graphics:this.renderGraphics.bind(this)};const{canvas:e,width:s,height:r}=t;this.canvas=e,this._screenSize={width:s,height:r},this._projectionMat=L(s,r),this.gl=this.canvas.getContext("webgl2");const o=this.gl;x.gl=o,this._resizeCanvas(),St(o);const a=ot;for(let n=0,f=a.length;n<f;n++){const d=a[n];this._shaders[d.name]=mt(o,d.vss,d.fss,d.attribParams,d.uniforms)}}render(t){t.calcRenderingInfos(),t.renderingType&&this._renderMethods[t.renderingType](t),t.needsToSort&&(t.sortChildren(),t.needsToSort=!1);const e=t.children;for(let s=0,r=e.length;s<r;s++)this.render(e[s])}renderSprite(t){const e=t.texture;if(!e)return;t.needsToUpdate&&t.updateCanvasTexture();const s=this.gl,r=this._shaders.sprite,{program:o,uniforms:a,vbo:n,ibo:f}=r;s.useProgram(o);const d=0,h=e.glTexture;s.uniform1i(a.texture,d),s.activeTexture(s.TEXTURE0+d),s.bindTexture(s.TEXTURE_2D,h);const v=I(e.scale.x,e.scale.y),u=B(this._projectionMat,t.parentTransform,t.transform,v);s.uniformMatrix3fv(a.transformation,!1,u),s.uniform1f(a.opacity,t.wholeOpacity);const T=n;s.bindBuffer(s.ARRAY_BUFFER,T);const m={w:e.width,h:e.height},g=[0,0,0,0,0,m.h,0,1,m.w,0,1,0,m.w,m.h,1,1];s.bufferData(s.ARRAY_BUFFER,new Float32Array(g),s.DYNAMIC_DRAW),r.pointAttrs();const w=f,R=6;s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,w),s.drawElements(s.TRIANGLES,R,s.UNSIGNED_SHORT,0),s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,null),s.bindBuffer(s.ARRAY_BUFFER,null),s.bindTexture(s.TEXTURE_2D,null)}renderGraphics(t){const e=this._shaders[t.shaderType],{program:s,uniforms:r,vbo:o,ibo:a}=e,n=this.gl;n.useProgram(s);const f=B(this._projectionMat,t.parentTransform,t.transform);n.uniformMatrix3fv(r.transformation,!1,f),n.uniform1f(r.opacity,t.wholeOpacity),ct[t.shaderType](n,r,t.geometryInfo);const d=ht[t.shaderType],h=(v,u=0)=>{d(n,r,t.geometryInfo,u,t.strokeWidth),n.bindBuffer(n.ARRAY_BUFFER,o),n.bufferData(n.ARRAY_BUFFER,new Float32Array(v),n.DYNAMIC_DRAW),e.pointAttrs();const T=at[t.graphicsType](t);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a);const m=ut[t.graphicsType](t);n.bufferData(n.ELEMENT_ARRAY_BUFFER,new Uint16Array(m),n.DYNAMIC_DRAW),n.drawElements(n[nt[t.graphicsType]],T,n.UNSIGNED_SHORT,0),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null),n.bindBuffer(n.ARRAY_BUFFER,null)};t.needsUpdatingVertices&&(t.vertices=t.calcVertices(),t.needsUpdatingVertices=!1),t.needsUpdatingStroke&&(t.strokeVertices=t.calcStrokeVertices(),t.needsUpdatingStroke=!1),t.strokeWidth&&h(t.strokeVertices,1),h(t.vertices,0)}clear(t,e,s,r){Tt(this.gl,{r:t,g:e,b:s,a:r})}_resizeCanvas(){yt(this.gl,this.resolution)}set width(t){this._screenSize.width=t,this._projectionMat=L(t,this._screenSize.height)}set height(t){this._screenSize.height=t,this._projectionMat=L(this._screenSize.width,t)}flush(){this.gl.flush()}}class O{constructor(){this._x=1,this._y=1}set x(t){this._x=t}set y(t){this._y=t}get x(){return this._x}get y(){return this._y}set(t,e){this._x=t,this._y=e!==void 0?e:t}}class wt extends O{constructor(){super(),this._x=0,this._y=0}}const N={r:0,g:0,b:0,a:1};class Rt{constructor(){this._position=new wt,this._opacity=1,this._scale=new O,this.rotation=0}set opacity(t){this._opacity=Math.min(Math.max(t,0),1)}get opacity(){return this._opacity}get position(){return this._position}get scale(){return this._scale}}var U=(i=>(i.LINEAR="LINEAR",i.NEAREST="NEAREST",i))(U||{});class Y{constructor(t,e="NEAREST"){this._width=0,this._height=0,this._scale=new O,this.scaleMode="NEAREST",this.scaleMode=e;const s=x.checkGL(),r=Et(s,e);t?(this.glTexture=G(s,r,t),this._width=t.width,this._height=t.height):this.glTexture=r}set texture(t){const e=x.checkGL();this.glTexture=G(e,this.glTexture,t),this._width=t.width,this._height=t.height}get scale(){return this._scale}get width(){return this._width}get height(){return this._height}}class E{static add(t,e,s){this.loaded=!1;const r=this._promiseLoadingImage(t,e,s);return this._tasks.push(r),this}static loadAll(){this._taskNum=this._tasks.length,this._progressManager(this._taskNum,this._taskNum),Promise.all(this._tasks).then(()=>{this.loaded=!0,this._loadThen()})}static _promiseLoadingImage(t,e,s="NEAREST"){return new Promise(o=>{fetch(e).then(a=>a.blob()).then(a=>createImageBitmap(a)).then(a=>{this._resources.set(t,new Y(a,U[s])),this._tasks.shift(),this._progressManager(this._taskNum,this._tasks.length),o(a)})})}static loadThen(t){this._loadThen=t,this._tasks.length===0&&t()}static manageProgress(t){this._progressManager=t}static get(t){if(this._resources.has(t))return this._resources.get(t)}}E._resources=new Map,E._tasks=[],E._loadThen=function(){},E._taskNum=0,E._progressManager=()=>{},E.loaded=!1;class S{}S.x=1,S.y=1;class y{static _getPointerCo(t){const e=this._canvasSize;return{x:t.offsetX*this.screenSize.width/e.w,y:t.offsetY*this.screenSize.height/e.h}}static enableEvent(t,e,s){this.canvas=e,e.addEventListener(t,r=>{const o=this._getPointerCo(r);s.triggerEvent(t,o)})}static set canvas(t){this._canvas=t,this._canvasSize=this._getCanvasSize(t),this._resizeObserver=new ResizeObserver(()=>{this._canvasSize=this._getCanvasSize(t)}),this._resizeObserver.observe(document.body),t.addEventListener("touchstart",this._preventTouchScroll)}static _preventTouchScroll(t){t.preventDefault()}static _getCanvasSize(t){return{w:t.clientWidth,h:t.clientHeight}}static disablePreventScrolling(t){t.removeEventListener("touchstart",this._preventTouchScroll)}static enablePreventScrolling(t){console.log(this._canvas),t.addEventListener("touchstart",this._preventTouchScroll)}}y.screenSize={width:0,height:0},y._canvasSize={w:0,h:0};class ${constructor(t,e,s,r){this.x=0,this.y=0,this.w=0,this.h=0,this.x=t,this.y=e,this.w=s,this.h=r}detectPointHit(t,e){return this.x<t&&this.x+this.w>t&&this.y<e&&this.y+this.h>e}}class At extends O{constructor(){super(),this._x=0,this._y=0}}class F extends Rt{constructor(){super(...arguments),this.anchor=new At,this.transform=P(),this.parentTransform=P(),this.parentOpacity=1,this.parent=void 0,this.renderingType="",this.shaderType="",this._zIndex=0,this.needsToSort=!1,this._size={width:0,height:0},this._eventsSets={pointerdown:new Set,pointerup:new Set,pointermove:new Set,pointerout:new Set},this.children=[]}set zIndex(t){this._zIndex=t,this.parent&&(this.parent.needsToSort=!0)}get zIndex(){return this._zIndex}set staticWidth(t){this._size.width=t}get staticWidth(){return this._size.width}set staticHeight(t){this._size.height=t}get staticHeight(){return this._size.height}calcRenderingInfos(){this.transform=this._calculateTransform(),this.parentTransform=this._calculateParentTransform(),this.parentOpacity=this._calculateParentOpacity()}addChild(t){t.parent||(t.parent=this,this.children.push(t))}removeChild(t){this.children.splice(this.children.indexOf(t),1),t.parent=void 0}_calculateTransform(){const t=C(this.position.x,this.position.y),e=I(this.scale.x,this.scale.y),s=W(this.rotation),r=C(-this.anchor.x,-this.anchor.y);return B(t,s,e,r)}_calculateParentTransform(){return this.parent?H(this.parent.parentTransform,this.parent.transform):P()}_calculateParentOpacity(){return this.parent?this.parent.parentOpacity*this.parent.opacity:1}get wholeOpacity(){return this.opacity*this.parentOpacity}get worldScale(){if(this.parent){const t=this.parent,e=t.worldScale;return{x:e.x*t.scale.x,y:e.y*t.scale.y}}else return{x:1,y:1}}get worldPosition(){if(this.parent){const t=this.parent,e=t.worldPosition,s=t.worldScale;return{x:e.x+t.position.x*s.x,y:e.y+t.position.y*s.y}}else return{x:0,y:0}}set x(t){this.position.x=t}set y(t){this.position.y=t}get x(){return this.position.x}get y(){return this.position.y}addEventListener(t,e){const s={target:this,callback:e};this._eventsSets[t].add(s)}_getBoundingRect(){const t=this.worldScale,e=this.worldPosition,s=e.x+(this.position.x-this.anchor.x)*t.x,r=e.y+(this.position.y-this.anchor.y)*t.y,o=this._size.width*this.scale.x*t.x,a=this._size.height*this.scale.y*t.y;return new $(s,r,o,a)}triggerEvent(t,e){this._getBoundingRect().detectPointHit(e.x,e.y)&&this._eventsSets[t].forEach(o=>{o.callback(e)}),this.propagateEvent(t,e)}propagateEvent(t,e){const s=this.children;for(let r=0,o=s.length;r<o;r++)s[r].triggerEvent(t,e)}sortChildren(){this.children.sort((t,e)=>t.zIndex-e.zIndex)}}class Ct extends F{constructor(t,e){super(),this._size={width:t,height:e}}}const Bt={width:300,height:150,canvas:document.createElement("canvas"),autoStyleCanvas:!1,autoPreventDefault:!0};class Ot{constructor(t){this.loader=E,t=Object.assign(Bt,t);const e=t.width,s=t.height;this.baseStage=new Ct(e,s);const r=t.canvas,o=t.autoStyleCanvas;this._canvas=r,o&&(r.style.width=`${e}px`,r.style.height=`${s}px`),this._screenSize={width:e,height:s},this.renderer=new gt({canvas:r,width:e,height:s}),S.x=this._resolutionX,S.y=this._resolutionY,y.screenSize=this._screenSize,this._preventTouchScrolling=t.autoPreventDefault}enablePointerEvent(...t){t.forEach(e=>{y.enableEvent(e,this._canvas,this.baseStage)}),this._preventTouchScrolling||y.disablePreventScrolling(this._canvas)}set width(t){this._screenSize.width=t,this.renderer.width=t,S.x=this._resolutionX}set height(t){this._screenSize.height=t,this.renderer.height=t,S.y=this._resolutionY}get _resolutionX(){return this.renderer.resolution*this._canvas.width/this._screenSize.width}get _resolutionY(){return this.renderer.resolution*this._canvas.height/this._screenSize.height}render(){this.renderer.render(this.baseStage),this.renderer.flush()}clearScreen(t=0,e=0,s=0,r){this.renderer.clear(t,e,s,r)}addResource(t,e,s){this.loader.add(t,e,s)}loadAll(){this.loader.loadAll()}get loaded(){return this.loader.loaded}}class zt{constructor(t,e){this._x=0,this._y=0,this._anchor=t,this._texture=e}set(t,e){this._x=t,this._y=e??t,this._reflectAnchorX(),this._reflectAnchorY()}_reflectAnchorX(){const t=this._texture;t&&(this._anchor.x=t.width*t.scale.x*this._x)}_reflectAnchorY(){const t=this._texture;t&&(this._anchor.y=t.height*t.scale.y*this._y)}set x(t){this._x=t,this._reflectAnchorX()}get x(){return this._x}set y(t){this._y=t,this._reflectAnchorY()}get y(){return this._y}set texture(t){this._texture=t,this._reflectAnchorX(),this._reflectAnchorY()}}class K extends F{constructor(t){super(),this.shaderType="sprite",this.renderingType="sprite",this.normalAnchor=new zt(this.anchor),t&&(this.texture=t)}set texture(t){this._texture=t,this.normalAnchor.texture=t}get texture(){return this._texture}_calculateTransform(){const t=C(this.position.x,this.position.y),e=I(this.scale.x,this.scale.y),s=W(this.rotation),r=C(-this.anchor.x,-this.anchor.y);return B(t,s,e,r)}_getBoundingRect(){const t=this.worldScale,e=this.worldPosition;let s;this.texture&&(this.normalAnchor.x||this.normalAnchor.y)?s={x:this.texture.width*this.normalAnchor.x,y:this.texture.height*this.normalAnchor.y}:s={x:this.anchor.x,y:this.anchor.y};const r=e.x+(this.position.x-s.x)*t.x,o=e.y+(this.position.y-s.y)*t.y,a=(this.texture?this.texture.width*this.texture.scale.x:this._size.width)*this.scale.x*t.x,n=(this.texture?this.texture.height*this.texture.scale.y:this._size.height)*this.scale.y*t.y;return new $(r,o,a,n)}}const b={font:"sans-serif",fontSize:20,fill:N,strokeWidth:0,stroke:N,shadow:N,shadowX:1,shadowY:1,shadowBlur:0},M=i=>`rgba(${i.r}, ${i.g}, ${i.b}, ${i.a})`;class Lt extends K{constructor(t,e){super(),this._text="",this._canvas=document.createElement("canvas"),this._resolution=S,this.needsToUpdate=!1,this._text=t||"",e=Object.assign(b,e),this._style=e;for(let s in b)this._style[s]=e[s]||b[s];this._texture=new Y(void 0,U.LINEAR),this.texture=this._texture,this.updateCanvasTexture()}_drawCanvas(){const t=this._canvas,e=t.getContext("2d"),s=this._style,r=this._text;t.width=2,t.height=2,e.font=`${s.fontSize}px ${s.font}`,e.textBaseline="top";const o=e.measureText(r),a=o.width+(s.shadow?s.shadowX:0),n=o.actualBoundingBoxDescent-o.actualBoundingBoxAscent+(s.shadow?s.shadowY:0);t.width=a*this._resolution.x,t.height=n*this._resolution.y,e.scale(this._resolution.x,this._resolution.y),e.clearRect(0,0,t.width,t.height),e.beginPath(),(s.shadowX||s.shadowY)&&(e.shadowOffsetX=s.shadowX,e.shadowOffsetY=s.shadowY,e.shadowBlur=s.shadowBlur,e.shadowColor=M(s.shadow)),e.font=`${s.fontSize}px ${s.font}`,e.textBaseline="top",e.fillStyle=M(s.fill),e.fillText(r,0,0),e.closePath(),e.beginPath(),s.strokeWidth&&(e.shadowOffsetX=0,e.shadowOffsetY=0,e.lineWidth=s.strokeWidth,e.strokeStyle=M(s.stroke),e.strokeText(r,0,0)),this._texture.scale.x=1/this._resolution.x,this._texture.scale.y=1/this._resolution.y}get text(){return this._text}set text(t){this._text=t,this.needsToUpdate=!0}async updateCanvasTexture(){this._drawCanvas(),this._texture.texture=this._canvas,this.texture=this._texture,this.needsToUpdate=!1}get style(){return this.needsToUpdate=!0,this._style}}p.App=Ot,p.Loader=E,p.Sprite=K,p.Stage=F,p.Text=Lt,p.Texture=Y,Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});
